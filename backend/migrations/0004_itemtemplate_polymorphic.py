# Generated by Django 5.0.6 on 2024-06-14 15:33

import django.db.models.deletion
from django.db import migrations, models


def set_polymorphic_ctype(apps, schema_editor):
    """
    Populates the polymorphic_ctype_id field of ItemTemplate with the correct
    content type, based on the model it is associated with.

    :param apps:
    :param schema_editor:
    :return:
    """
    item_template = apps.get_model('backend', 'ItemTemplate')
    content_type = apps.get_model('contenttypes', 'ContentType')

    for model_name in ['RadioDeviceTemplate', 'RadioAccessoryTemplate', 'PagerTemplate', 'PhoneTemplate', 'CallboxTemplate']:
        for tpl in apps.get_model('backend', model_name).objects.all():
            item_template.objects.filter(pk=tpl.itemtemplate_ptr_id).update(
                polymorphic_ctype_id=content_type.objects.get_for_model(tpl).id
            )


def migrate_template_id(apps, schema_editor):
    """
    Copies the old template_ids from the explicit template models into the
    polymorphic item model.

    :param apps:
    :param schema_editor:
    :return:
    """
    item = apps.get_model('backend', 'Item')

    for model_name in ['RadioDevice', 'RadioAccessory', 'Pager', 'Phone', 'Callbox']:
        model = apps.get_model('backend', model_name)
        for obj in model.objects.all():
            item.objects.filter(pk=obj.item_ptr_id).update(template=obj.template_old)


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0003_itemtemplate_private'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        # Internal changes
        migrations.AlterModelOptions(
            name='callboxtemplate',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='itemtemplate',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='pagertemplate',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='phonetemplate',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='radioaccessorytemplate',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='radiodevicetemplate',
            options={'base_manager_name': 'objects'},
        ),

        # Make ItemTemplate polymorphic and set polymorphic_ctypes accordingly
        migrations.AddField(
            model_name='itemtemplate',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype'),
        ),
        migrations.RunPython(set_polymorphic_ctype, migrations.RunPython.noop),

        # Migrate template_id from leaf models to polymorphic ItemTemplate model
        migrations.RenameField(
            model_name='callbox',
            old_name='template',
            new_name='template_old',
        ),
        migrations.RenameField(
            model_name='pager',
            old_name='template',
            new_name='template_old',
        ),
        migrations.RenameField(
            model_name='phone',
            old_name='template',
            new_name='template_old',
        ),
        migrations.RenameField(
            model_name='radioaccessory',
            old_name='template',
            new_name='template_old',
        ),
        migrations.RenameField(
            model_name='radiodevice',
            old_name='template',
            new_name='template_old',
        ),
        migrations.AddField(
            model_name='item',
            name='template',
            field=models.ForeignKey(default=None, null=True, help_text='Template this item is based on', on_delete=django.db.models.deletion.PROTECT, to='backend.itemtemplate'),
            preserve_default=False,
        ),
        migrations.RunPython(migrate_template_id, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='item',
            name='template',
            field=models.ForeignKey(blank=True, null=False, help_text='Template this item is based on', on_delete=django.db.models.deletion.PROTECT, to='backend.itemtemplate'),
        ),
        migrations.RemoveField(
            model_name='callbox',
            name='template_old',
        ),
        migrations.RemoveField(
            model_name='pager',
            name='template_old',
        ),
        migrations.RemoveField(
            model_name='phone',
            name='template_old',
        ),
        migrations.RemoveField(
            model_name='radioaccessory',
            name='template_old',
        ),
        migrations.RemoveField(
            model_name='radiodevice',
            name='template_old',
        ),
    ]
